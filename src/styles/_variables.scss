// ==========================================================================
// Design Tokens
// ==========================================================================

// Colors
// --------------------------------------------------------------------------

// Base Colors
$color-white: white; // because used in cjs.js
$color-black: black;
$color-blue: blue;

// Neutral Colors - grey
$color-gray-100: #f8f9fa;
$color-gray-200: #e9ecef;
$color-gray-300: #dee2e4;
$color-gray-400: #ced4da;
$color-gray-500: #adb5bd;
$color-gray-600: #6c757d;
$color-gray-700: #495057;
$color-gray-800: #343a40;
$color-gray-900: #212529;

// Brand Colors
$primary: #1969e1; // Your main brand color
$secondary: #83a4d4; // Secondary brand color
$color-primary: $primary;
$color-secondary: $secondary;

// Extended Color Palette
//    Variations of the primary color
$color-blue-light: #83a4d4;
$color-blue-light-m: #bfc7d5;
$color-blue-light-s: #ced6e3;
$color-blue-mid: #598ad4;

$color-orange-faded: #f2ddbe;

$color-success: #28a745;
$color-danger: #dc3545;
$color-error: red;
$color-warning: #ffc107;
$color-info: #17a2b8;

// Text Colors
$color-text-dark: #333;
$color-text-light: #fff;
$color-text-muted: #6c757d;

// Semmantic text colors
$text-primary: $color-gray-900; // common text color
$text-secondary: $color-gray-600;
$text-muted: $color-gray-500;

$link-color: $color-primary; // link text color
$link-hover-color: darken($color-primary, 15%); // link hover text color

$color-title: $color-primary;
$color-subtitle: #666;

$color-text-author: $color-blue;
$color-text-comments: $color-primary;
$color-likes: rgb(165, 39, 1);

// Background Colors
$color-bg-light: #fff;
$color-bg-light-s: $color-blue-light-s;
$color-bg-light-m: $color-blue-light-m;
$color-bg-light-l: $color-blue-light;
$color-bg-mid: $color-blue-mid;
$color-bg-header: $color-orange-faded;
$color-button-bg: $color-blue-light-s;

$border-color: $color-gray-300;
$background-primary: $color-white;
$background-secondary: $color-gray-100;

// Breakpoints
$breakpoint-s: 480px; // BREAKPOINTS.SMALL, good for mobile
$breakpoint-m: 768px; // BREAKPOINTS.MEDIUM, good for middle screens or windows
$breakpoint-l: 1024px; // BREAKPOINTS.LARGE, good for full screen of bigger monitors

// Spacing
// --------------------------------------------------------------------------
// Don't change the values of the spacing variables.
$spacing-xs: 0.25rem;
$spacing-s: 0.3rem;
$spacing-m: 0.5rem;
$spacing-l: 1rem;
$spacing-xl: 2rem;
$spacing-xxl: 3rem;
// Borders
// --------------------------------------------------------------------------
$border-radius-s: 0.2rem;
$border-radius-m: 0.5rem;
$border-radius-l: 1rem;

// Layout
$header-footer-min-height: 20vh;
$mobile-header-footer-min-height: 10vh;

/* Sass mixin for responsive design
 *
 * Creates media queries for responsive design based on predefined breakpoints.
 * This mixin simplifies writing media queries by using named breakpoints.
 * 
 * @param $breakpoint - The breakpoint to use ("small", "medium", or "large").
 * @content - The styles to apply within the media query.
 * @example
 *   .my-element {
 *     width: 100%;
 *     
 *     @include below(medium) {
 *       width: 50%;
 *     }
 *   }
 */
@mixin below($breakpoint) {
  @if $breakpoint == small {
    @media (max-width: $breakpoint-s) {
      @content;
    }
  } @else if $breakpoint == medium {
    @media (max-width: $breakpoint-m) {
      @content;
    }
  } @else if $breakpoint == large {
    @media (max-width: $breakpoint-l) {
      @content;
    }
  }
}
